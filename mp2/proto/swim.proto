syntax = "proto3";

package swim;

option go_package = "mp2/proto";

// SWIMMessage defines the types of messages exchanged between nodes
message SWIMMessage {
  enum MessageType {
    DIRECT_PING = 0;
    INDIRECT_PING = 1; // relay
    PONG = 2; // Take indirect ACK messages
    JOIN = 3;
  }

  MessageType type = 1;
  string sender = 2;
  string target = 3;
  repeated MembershipInfo membership = 10; // For gossiping membership info
}

// MembershipInfo stores information about a node in the cluster
message MembershipInfo {
  enum State {
    Suspected = 0;
    Alive = 1;
    Down = 2;
    Join = 3;
  }

  string memberID = 1; // IP+PORT+TIMESTAMP
  State memberStatus = 2; // Can be "Alive", "Suspected", or "Failed", "Join"
  string memberAddress = 3;
  int32 memberIncarnation = 4; 
}
